@import url('https://font.googleapis.com/css2?family-Roboto&displau=swap');

*{
    margin: 0;
    padding: 0;
    box-sizing: border-box;
}

body {
    font-family: "Roboto", sans-serif;
    min-height: 100vh;
    padding: 20px;
}

.container {
    max-width: 800px;
    min-height: 400px;
    margin-inline: auto;
    border: 1px solid #000;
    display: flex; /* made it horizinal*/
    /* gap: 1rem; */ /* gapping 1 rem from each */
    gap:1rem;
    justify-content: space-evenly; /* to fix the horizimal thing ,center is often used, space-around makes space even without gap
    space-betweem
    space-evenly better to use
     */
     /* align-items: center; *//* flex-start is the default, felx-end they will go to the bottom, center go to center */

     align-items: center; /* flex-start Everything goes to the left bcuz our alig items become the horizonal eliment 
     flex-end they will go left
     with center, we might not see a difference cuz we are aking all the space with justify-content space-evenly
     actually nothing changes cuz we took all the space
     but if we change flex-direction to row and lets gap it as well*/
     /* flex-direction: row; */ /* column to change the direction 
     no space between them bcuz we removed ga and there is no more space to space out since the min height is 100 and we have 6 columns*100 so they took all the space
    row
    row-reverse
    column-reverse
    */
    /* When minimzie the screen the boxes go outside and not staying in our container which is overflow to fix:*/
    /* flex-wrap: wrap; */
    /* But instead of using flex-direction nd flex-wrap we can use: */
    flex-flow: row nowrap; /* first value is the direction  */
    /* All this properities are on the flex container */
    align-content: space-evenly; /* This is for the space between rows and has the value like justify-content 
    */

}

.box {
    /* min-width: 100px; */
    height: 100px;
    background-color: #000;
    color: #fff;
    font-size: 2rem;
    padding: 0.5rem;

    display: flex; /* If we make this a flex container we can set the numers to be displaied in the center of each box*/
    justify-content: center;
    align-items: center;
    
    /* We can use this three elements to center any element inside a contianer or the body since it consider as a container
        display: flex;
        justify-content: center;
        align-items: center
    ;*/
    /* we made them center with these 3 elements , but they still flex items inside the large flex container 
    */

    /* We commented the last 3 divs in html */

    /* flex-grow: 1; */ /* If they need to grow to full up the page they will grow the same amount */
    /* flex-basis: 250px; */ /* We commented the min-width in .box and this one giving it a min width, it's not the same as min-width but it is what it's doing in this case*/
    /* flex-shrink:1; */
    flex: 1 1 250px; /* First value is grow,
        second is shrink,third is basis we can use % in basis*/
        /* We can do the same below */
}

.box:nth-child(2) {
    /* flex-grow: 2; */ /* Now this one is taking more than the first but it is the double so after the 100px for each and what is left it gives the extra spaces to the one that has the flex-grow 2 
    so it says whatever it left you take 2 for every one i take */
    /* we need to remove the wrap settings and set it nowrap in .container*/

    /* flex-shrink: 2; */ /* The second box is set to shrink more than the first one , we will see better if we makes the boxes larger like in flex-basis*/
    /* They look to have the same size but when we shrink the page down we should see the one on the right so number 2 is smaller than number 1 bcuz of the shrink of number 2 
    it's the revierse of flex-grow which gives more than what it's given like 100px , this one give less if it had to below the basis */
    flex: 2 2 250px;
}

/* Uncomment the rest 4 div */

